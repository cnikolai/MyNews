# Build configuration file for Circle CI
version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - run:
          name: Install Build Tools
          command: echo y | sdkmanager "build-tools;26.0.2"
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      #- run:
      #    name: Run Android Lint
      #    command: ./gradlew lintStagingDebug -PpreDexEnable=false -PdisablePreDex --console=plain
      #- run:
      #    name: Run PMD
      #    command: ./gradlew pmd -PpreDexEnable=false -PdisablePreDex --console=plain
      #- run:
      #    name: Run Checkstyle
      #    command: ./gradlew checkstyle -PpreDexEnable=false -PdisablePreDex --console=plain
      #- run:
      #    name: Run Findbugs
      #    command: ./gradlew findbugs -PpreDexEnable=false -PdisablePreDex --console=plain
      #- run:
      #    name: Accept Licenses
      #    command: yes | sdkmanager --licenses && sdkmanager --update
# steps:
#      - run:
#          name: Setup emulator
#          command: sdkmanager "platform-tools" "platforms;android-22" "emulator" "system-images;android-22;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-22;default;armeabi-v7a"
#      - run:
#          name: Launch emulator
#          command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel on -gpu off
#          background: true
#      - run:
#          name: Run Tests
#          command: ./gradlew :demo:connectedAndroidTest      
      - run:
            name: Setup emulator
            command: sdkmanager "system-images;android-16;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-16;default;armeabi-v7a"
            #sdkmanager "system-images;android-25;google_apis;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-25;google_apis;armeabi-v7a"
            #sdkmanager "system-images;android-24;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-24;default;armeabi-v7a"
      #- run: 
      #    name: Launch Emulator
      #    command: emulator -avd circleci-android24 -no-window -gpu off
             #background: true
             #parallel: true
      - run:
            name: Launch emulator
      #      command: /opt/android-sdk-linux/emulator/emulator -avd test -no-audio -no-window -no-boot-anim  -accel on
            #export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel on
            command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator -avd android16 -no-window -gpu off
            #export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-x86 -avd test -noaudio -no-boot-anim -no-window -accel on
            #export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel auto -verbose
      #      background: true
      #- run:
      #    name: Setup emulator
      #    command: sdkmanager "system-images;android-21;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-21;default;armeabi-v7a"
      #- run:
      #    name: Launch emulator
      #    command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel auto -verbose
      #   background: true
      - run:
          name: Wait emulator
          command: |
            # wait for it to have booted
            circle-android wait-for-boot
            # unlock the emulator screen
            sleep 30
            adb shell input keyevent 82
      - run:
          name: Run Tests
          command: ./gradlew connectedAndroidTest -PpreDexEnable=false -PdisablePreDex --console=plain
          #command: ./gradlew testStagingDebug -PpreDexEnable=false -PdisablePreDex --console=plain
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_artifacts:
          path: app/build/outputs
          destination: outputs
      - store_test_results:
          path: app/build/test-results
      - deploy:
          name: Labs
          command: |
            if [ "${CIRCLE_TAG}" != "" ]; then
              ./gradlew clean assembleStagingDebug -PpreDexEnable=false -PdisablePreDex --console=plain
              sudo apt-get install build-essential
              sudo apt-get install rubygems
              sudo apt-get install ruby-dev
              sudo gem install bundler
              ./config/deploy.sh
            fi
deployment:
  labs:
    tag: /labs\/.*/

experimental:
  # this will enable chat notifications only for certain branches
  notify:
    branches:
      only:
        - labs
        - dev
#before_script:
#  - echo no | android create avd --force -n test -t android-21 --abi armeabi-v7a
#  - emulator -avd test -no-skin -no-audio -no-window &
#  - android-wait-for-emulator
#  - adb shell input keyevent 82 &
#test:
 # override:
    # launch the default Android 24 emulator
 #   - emulator -avd circleci-android24 -no-window -gpu off:
 #       background: true
 #       parallel: true
 #   - circle-android wait-for-boot
    # run tests against the emulator
  #  - ./gradlew connectedAndroidTest:
  #      timeout: 720
